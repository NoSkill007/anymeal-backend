# ======================================================
# CONFIGURACIÓN DEL SERVIDOR
# ======================================================
# Puerto en el que se ejecutará el backend. El 8080 es el estándar.
server.port=8080

# ======================================================
# CONFIGURACIÓN DE LA BASE DE DATOS (DataSource)
# ======================================================
# URL de conexión a la base de datos MySQL.
# localhost:3306 es la dirección estándar de XAMPP.
# anymeal_db es el nombre de la base de datos que creamos.
# useSSL=false y allowPublicKeyRetrieval=true son parámetros para evitar problemas de conexión comunes.
spring.datasource.url=jdbc:mysql://localhost:3306/anymeal_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
# Usuario de la base de datos. Por defecto en XAMPP es 'root'.
spring.datasource.username=root
# Contraseña de la base de datos. Por defecto en XAMPP está vacía. Si le pusiste una, cámbiala aquí.
spring.datasource.password=

# ======================================================
# CONFIGURACIÓN DE HIBERNATE (JPA)
# ======================================================
# Le decimos a Hibernate que el dialecto a usar es el de MySQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Esta es una de las configuraciones más útiles para desarrollo:
# 'update': Hibernate comparará tus clases Java (@Entity) con las tablas de la BD.
# Si hay diferencias (una nueva columna, por ejemplo), intentará actualizar la tabla automáticamente.
# Otras opciones: 'create' (borra y crea todo de nuevo), 'validate' (solo valida), 'none' (no hace nada).
spring.jpa.hibernate.ddl-auto=update

# Muestra en la consola las sentencias SQL que Hibernate ejecuta.
# Muy útil para depurar y ver qué está pasando por debajo.
spring.jpa.show-sql=true

# ======================================================
# CONFIGURACIÓN DE SEGURIDAD (JWT)
# ======================================================
# Clave secreta para firmar los tokens JWT. DEBE ser larga y segura.
# En un proyecto real, esto se saca a una variable de entorno, pero para la universidad así está bien.
# Puedes generar una nueva en: https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
jwt.secret=a3a8e3c8a9d3b2c1a0f9e8d7c6b5a4d3e2f1a0b9c8d7e6f5a4b3c2d1e0f9a8b7
# Tiempo de expiración del token en milisegundos.
# 86400000 ms = 24 horas.
jwt.expiration.ms=86400000
